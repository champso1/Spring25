/** \page Building

# Dependencies

Here I list the dependencies for this project, in case you need to query online for additional instructions for a system that this manual doesn't cover. Though, if you are on a system other than Windows, for which I give (I hope) sufficient documentation, you could probably figure it out yourself.

- *C/C++ compiler and CMake*: to build the project.
- *Doxygen*: for generating HTML/PDF documentation for the project.
- *Graphviz*: a "dependency" of Doxygen for making visual diagrams of the components in the project.
- *Gnuplot*: A GNU plotting tool that is relatively lightweight and simple to use.



# Unix-like (Linux, Mac)

Install the above dependencies via your system's package manager. For instance, if using a Debian-based distro, you'd type:

```bash
sudo apt install build-essential cmake doxygen graphviz gnuplot
```

Then, clone the repository somewhere, cd into it and do the usual CMake stuff:

```bash
mkdir build && cd build
cmake ..
cmake --build .
```

After it compiles, you will have an executable called **NAME**.


# Windows

Preferably, do this within WSL, then you can follow the Unix-like instructions (and simply copy-paste the package installation command).


## MSYS2

I have found, though, that MSYS2 works pretty well. Installation instructions can be found online. I prefer (and it is recommended to use) the UCRT64 environment. Install the same packages as in the Unix-like instructions, but include the ridiculously long prefix to install the UCRT-specific ones, i.e. you'd type:

```bash
pacman -S mingw-w64-ucrt-x86_64-toolchain mingw-w64-ucrt-x86_64-cmake mingw-w64-ucrt-x86_64-doxygen mingw-w64-ucrt-x86_64-graphviz mingw-w64-ucrt-x86_64-gnuplot
```

Once this is done and the UCRT64 binary folder is in your `PATH` environment variable, then you can follow the same build steps as in the Unix-like instructions from within a Powershell or Command Prompt.





*/